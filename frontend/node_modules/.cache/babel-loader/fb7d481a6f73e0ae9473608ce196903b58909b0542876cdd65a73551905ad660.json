{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nVue.use(Vuex);\nVue.use(ElementUI);\nimport { reqGetList, reqLogin, reqGetme, reqAddEmployee, reqDelEmployee, reqModify, reqModEmployee, reqGetDepart, reqGetDepartEmployee, reqEmail, reqForgetPassword } from \"@/api\";\nconst state = {\n  code: '',\n  token: localStorage.getItem('TOKEN'),\n  userInfo: '',\n  userlist: {},\n  self: {},\n  department: {},\n  department_employee: []\n};\nconst mutations = {\n  USERLOGIN(state, token) {\n    state.token = token;\n  },\n  GETLIST(state, userlist) {\n    state.userlist = userlist;\n  },\n  GETME(state, result) {\n    state.self = result;\n  },\n  GETDEPART(state, department) {\n    state.department = department;\n  },\n  GETDEPARTEMPLOYEE(state, employee) {\n    state.department_employee = employee;\n  }\n};\nconst actions = {\n  //登录\n  async userLogin({\n    commit\n  }, data) {\n    let result = await reqLogin(data.name, data.password);\n    // 服务器下发token 通过带token向服务器要资源\n    if (result.error_message == 'success') {\n      commit('USERLOGIN', result.token);\n      // 持久化存储token\n      localStorage.setItem(\"TOKEN\", result.token);\n      return 'ok';\n    } else if (result.status == '403') return Promise.reject(new Error('faile'));\n  },\n  //获得手下职员的列表信息\n  async getList({\n    commit\n  }) {\n    let result = await reqGetList(state.token);\n    if (result.length > 0) {\n      commit('GETLIST', result);\n      return 'ok';\n    } else return Promise.reject(new Error('faile'));\n  },\n  //获得登录者信息\n  async getMe({\n    commit\n  }) {\n    let result = await reqGetme(state.token);\n    console.log(result);\n    if (result.length !== 0) {\n      commit('GETME', result);\n      return 'ok';\n    } else return Promise.reject(new Error('faile'));\n  },\n  //添加雇员\n  async addEmployee({\n    commit\n  }, data) {\n    let result = await reqAddEmployee(data);\n    if (result.error_message == 'success') {\n      alert(\"添加成功\");\n      return 'ok';\n    } else {\n      alert(result.error_message);\n      return Promise.reject(new Error('faile'));\n    }\n  },\n  //开除雇员 \n  async delEmployee({\n    commit\n  }, data) {\n    let result = await reqDelEmployee(data, state.token);\n    if (result.error_message == 'success' || result.error_message == '该员工已离职') {\n      alert(\"删除成功\");\n      return 'ok';\n    } else {\n      alert(result.error_message);\n      return Promise.reject(new Error('faile'));\n    }\n  },\n  //修改个人信息\n  async molSelf({\n    commit\n  }, data) {\n    let result = await reqModify(data, state.token);\n    console.log(result);\n    if (result.error_message == 'success') {\n      alert(\"修改成功\");\n      return 'ok';\n    } else if (result.error_message == '出生日期不符合规则') {\n      alert(result.error_message);\n      return Promise.reject(new Error('faile'));\n    }\n  },\n  //更新职员信息\n  async molEmployee({\n    commit\n  }, data) {\n    let result = await reqModEmployee(data, state.token);\n    // console.log(result);\n    if (result.error_message == 'success') {\n      alert(\"修改成功\");\n      return 'ok';\n    } else {\n      alert(result.error_message);\n      return Promise.reject(new Error('faile'));\n    }\n  },\n  //获得部门信息\n  async getDepart({\n    commit\n  }) {\n    let result = await reqGetDepart(state.token);\n    // console.log(result);\n    if (result.length > 0) {\n      commit('GETDEPART', result);\n      return 'ok';\n    } else return Promise.reject(new Error('faile'));\n  },\n  //获得部门下雇员    \n  async getDepartEmployee({\n    commit\n  }, data) {\n    let result = await reqGetDepartEmployee(data, state.token);\n    // console.log(result);\n    if (result.length >= 0) {\n      commit('GETDEPARTEMPLOYEE', result);\n      return 'ok';\n    } else return Promise.reject(new Error('faile'));\n  },\n  //发送验证码\n  async getCode({\n    commit\n  }, data) {\n    let result = await reqEmail(data);\n    console.log(result);\n    if (result.error_message == 'succeess') {\n      return 'ok';\n    } else return Promise.reject(new Error('faile'));\n  },\n  //忘记密码\n  async getNewPassword({\n    commit\n  }, data) {\n    console.log(data);\n    let result = await reqForgetPassword(data);\n    console.log(result);\n    // if (result.error_message == 'succeess') {\n    //     return 'ok'\n    // } else\n    //     return Promise.reject(new Error('faile'))\n  }\n};\n\nconst getter = {};\nVue.config.devtools = true;\nexport default new Vuex.Store({\n  state,\n  mutations,\n  actions,\n  getter\n});","map":{"version":3,"names":["Vue","Vuex","ElementUI","use","reqGetList","reqLogin","reqGetme","reqAddEmployee","reqDelEmployee","reqModify","reqModEmployee","reqGetDepart","reqGetDepartEmployee","reqEmail","reqForgetPassword","state","code","token","localStorage","getItem","userInfo","userlist","self","department","department_employee","mutations","USERLOGIN","GETLIST","GETME","result","GETDEPART","GETDEPARTEMPLOYEE","employee","actions","userLogin","commit","data","name","password","error_message","setItem","status","Promise","reject","Error","getList","length","getMe","console","log","addEmployee","alert","delEmployee","molSelf","molEmployee","getDepart","getDepartEmployee","getCode","getNewPassword","getter","config","devtools","Store"],"sources":["D:/bz2021/EnterpriseManagementSystem/frontend/src/store/index.js"],"sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport ElementUI from 'element-ui';\r\nimport 'element-ui/lib/theme-chalk/index.css';\r\nVue.use(Vuex);\r\nVue.use(ElementUI)\r\n\r\n\r\nimport { reqGetList, reqLogin, reqGetme, reqAddEmployee, reqDelEmployee, reqModify, reqModEmployee, reqGetDepart, reqGetDepartEmployee, reqEmail, reqForgetPassword } from \"@/api\";\r\nconst state = {\r\n    code: '',\r\n    token: localStorage.getItem('TOKEN'),\r\n    userInfo: '',\r\n    userlist: {},\r\n    self: {},\r\n    department: {},\r\n    department_employee: []\r\n};\r\nconst mutations = {\r\n    USERLOGIN(state, token) {\r\n        state.token = token\r\n    },\r\n    GETLIST(state, userlist) {\r\n        state.userlist = userlist\r\n    },\r\n    GETME(state, result) {\r\n        state.self = result;\r\n    },\r\n    GETDEPART(state, department) {\r\n        state.department = department\r\n    },\r\n    GETDEPARTEMPLOYEE(state, employee) {\r\n        state.department_employee = employee\r\n    }\r\n};\r\nconst actions = {\r\n    //登录\r\n    async userLogin({ commit }, data) {\r\n        let result = await reqLogin(data.name, data.password)\r\n        // 服务器下发token 通过带token向服务器要资源\r\n        if (result.error_message == 'success') {\r\n            commit('USERLOGIN', result.token)\r\n            // 持久化存储token\r\n            localStorage.setItem(\"TOKEN\", result.token)\r\n            return 'ok'\r\n        }\r\n        else if (result.status == '403')\r\n            return Promise.reject(new Error('faile'))\r\n    },\r\n    //获得手下职员的列表信息\r\n    async getList({ commit }) {\r\n\r\n        let result = await reqGetList(state.token);\r\n        if (result.length > 0) {\r\n            commit('GETLIST', result)\r\n            return 'ok'\r\n        } else\r\n            return Promise.reject(new Error('faile'))\r\n    },\r\n    //获得登录者信息\r\n    async getMe({ commit }) {\r\n        let result = await reqGetme(state.token);\r\n        console.log(result);\r\n        if (result.length !== 0) {\r\n            commit('GETME', result)\r\n            return 'ok'\r\n        } else\r\n            return Promise.reject(new Error('faile'))\r\n    },\r\n    //添加雇员\r\n    async addEmployee({ commit }, data) {\r\n        let result = await reqAddEmployee(data);\r\n        if (result.error_message == 'success') {\r\n            alert(\"添加成功\")\r\n            return 'ok'\r\n        } else {\r\n            alert(result.error_message);\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    //开除雇员 \r\n    async delEmployee({ commit }, data) {\r\n        let result = await reqDelEmployee(data, state.token);\r\n        if (result.error_message == 'success' || result.error_message == '该员工已离职') {\r\n            alert(\"删除成功\")\r\n            return 'ok'\r\n        } else {\r\n            alert(result.error_message);\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    //修改个人信息\r\n    async molSelf({ commit }, data) {\r\n        let result = await reqModify(data, state.token);\r\n        console.log(result);\r\n        if (result.error_message == 'success') {\r\n            alert(\"修改成功\")\r\n            return 'ok'\r\n        } else if (result.error_message == '出生日期不符合规则') {\r\n            alert(result.error_message);\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    //更新职员信息\r\n    async molEmployee({ commit }, data) {\r\n        let result = await reqModEmployee(data, state.token);\r\n        // console.log(result);\r\n        if (result.error_message == 'success') {\r\n            alert(\"修改成功\")\r\n            return 'ok'\r\n\r\n        } else {\r\n            alert(result.error_message);\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    //获得部门信息\r\n    async getDepart({ commit }) {\r\n        let result = await reqGetDepart(state.token);\r\n        // console.log(result);\r\n        if (result.length > 0) {\r\n            commit('GETDEPART', result)\r\n            return 'ok'\r\n        } else\r\n            return Promise.reject(new Error('faile'))\r\n    },\r\n    //获得部门下雇员    \r\n    async getDepartEmployee({ commit }, data) {\r\n        let result = await reqGetDepartEmployee(data, state.token);\r\n        // console.log(result);\r\n        if (result.length >= 0) {\r\n            commit('GETDEPARTEMPLOYEE', result)\r\n            return 'ok'\r\n        } else\r\n            return Promise.reject(new Error('faile'))\r\n    },\r\n    //发送验证码\r\n    async getCode({ commit }, data) {\r\n        let result = await reqEmail(data);\r\n        console.log(result);\r\n        if (result.error_message == 'succeess') {\r\n            return 'ok'\r\n        } else\r\n            return Promise.reject(new Error('faile'))\r\n    },\r\n    //忘记密码\r\n    async getNewPassword({ commit }, data) {\r\n        console.log(data);\r\n        let result = await reqForgetPassword(data);\r\n        console.log(result);\r\n        // if (result.error_message == 'succeess') {\r\n        //     return 'ok'\r\n        // } else\r\n        //     return Promise.reject(new Error('faile'))\r\n    },\r\n};\r\nconst getter = {};\r\nVue.config.devtools = true\r\nexport default new Vuex.Store({\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getter\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}